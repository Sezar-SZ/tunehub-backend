// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  username     String         @unique
  password     String
  role         Role           @default(USER)
  Playlist     Playlist[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  likePlaylist likePlaylist[]
}

model Playlist {
  id            String          @id @default(dbgenerated("nanoid()")) @db.VarChar(11)
  name          String
  creator       User            @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId     Int
  published     Boolean
  playlistTrack PlaylistTrack[]
  likePlaylist  likePlaylist[]
}

model Song {
  id            Int             @id @default(autoincrement())
  externalID    String          @unique
  title         String
  preview       String?
  artist        String?
  cover         String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  playlistTrack PlaylistTrack[]
}

model PlaylistTrack {
  id         Int      @id @default(autoincrement())
  playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  playlistId String   @db.VarChar(11)
  song       Song     @relation(fields: [songId], references: [id], onDelete: Cascade)
  songId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model likePlaylist {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  playlistId String   @db.VarChar(11)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
